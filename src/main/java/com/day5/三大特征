封装:
将属性私有化,提供一对公共的get/set方法进行读取和设置的操作

private:私有化--->
可以修饰类的成员
使用private修饰的成员,只能在定义的类中使用


继承:一个对象直接使用另一对象的属性和方法。
优势:提高代码的复用性,方便上层类控制下层类

extends:表明2个类的继承关系   Son extends Father
Father:父类,超类,基类
Son:子类,派生类

特征:
1.子类必须使用extends表明与父类的继承关系
2.父类更通用,子类更具体--->父类范围大于子类
3.java不允许多继承,extends后只能有1个父类;一个父类可以让N个子类继承
4.C extends B,  B extends A ,C同样能够继承A中的属性和方法;
5.private修饰的成员,子类不可见
6.子类可以重写(覆盖)父类的同名方法;但是不能重写属性
	子类对象调用方法时,java先判断子类有无重写,有,则使用子类重写的方法;否则使用父类的
7.除private修饰的成员外,子类必须继承父类的所有属性和方法;
	但不继承构造方法,但子类会调用父类的构造方法
	




重写:Override 子类重写父类的方法  ---> 
	子类拥有父类共性的方法,也可以进行改写,体现个性;同一个父类的方法,不同的子类有不同的实现
1.重写必须有继承,发生在子类重写父类
2.相同的返回值类型,相同的方法名,相同的参数列表
3.重写方法不能使用更严格的访问控制





